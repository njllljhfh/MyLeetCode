# -*- coding:utf-8 -*-
"""

"""


def func(n):
    print("from func(), n is %d!" % (n), flush=True)


"""
已经存在了函数 func()，现在有一个新的需求，希望可以记录下函数的执行日志，
我们可以在函数中添加一行记录日志的代码，但是如果有很多函数，这样做会费时费力，且代码重复冗长。
一个容易想到的办法是重新定义一个日志函数，在调用完函数后，记录日志。
"""


def log(func):
    func(0)
    print('日志：%s is called' % func.__name__)


log(func)

"""
然而这样并不能彻底解决问题，对需要记录日志的函数的每一处调用都要调用新函数 log()，
如果要取消日记记录，就要重新做一遍代码撤销的工作。这里就引入了装饰器。
"""
